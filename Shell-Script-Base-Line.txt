
PESCA DOS COMANDOS - BASELINE
LIVRO DE MÃO DOS COMANDO LINUX

Informações importantes do Curso de Shell Script

- Somente o superusuário define shell para os outros usupários
- Exit e logaut são diferentes ctrl + d = logoult

- passwd
Altera a senha do usário, somente o dono do usuário altera a própria senha ou o superusuário. passwd também define período de validade da conta ou senha.
O usuário comum precisa solicitar a senha antiga se já houver uma.
Caso contrário somente o superusuário poderá.

-  Principais opções do comando
-d > --delete (Deleta a senha de uma conta deixando-a vazia, uma forma de desativer uma conta rapindamente).

-e > --expire (Expira a senha de um usuário imediatamente obrigado-o a recirar a senha no próximo logon).
[Verificar Script para troca de senha de todos os usuários do Linux]


-i --inative (inativar um conta, por senha expirada)


-l --lock (Acrescenta um ! no início da senha tornando-a inválida)


-q ???

-r repository --????

R- ?????


-s --Status (Status de uma conta de usuário)

- Unlook remove o ! da senha

-w  Worn Days (Avisar x dias antes da senha se alterada sobre a necessidade de alteração)

-X max Day (Máximo de dias de validade de uma senha)


Arquivos de configuraçoes envolvidos com o passwd

/etc/passwd

/etc/shadow

/etc/pam.d/passwd (PAM configurações do passwd)



--------------------------------------------------------------------------
Formas de comando no Linux

Só o comando
Comando e Opção
Comando e Argumentos

(Todos os comando do bash)


Whatis
man
apropos
help

O man page aceita comandos de para manizear a p[ágina de manual.





----------------------------------------------------------------------------
				MANIPULANDO ARQUIVOS E DIRETÓRIOS
----------------------------------------------------------------------------

A base dos diretórios FHD é o /
Diretório Raiz


No Linux atual não há limite para criação de nomes de arquivos

No antigos UNIX Padrão system V ( o padrão era14 caracteres), já no BSD O limite é de 256 Caracteres


/ bin   Binário do sistema, comando compilados em C para utilização de usuário comum

/etc arquivos de configuração globais

/lib bibliotecas de Linux e de sistemas de terceiros

/tmp arquivos temporários

/home   arquivos de usupários (Arquivos de configuração de ambiente do usuário)

/usr/bin   Uilitários

/usr/sbin  utilitários root

/dev  arquivos de disposirtivos (blocos)



No línux não existe extenção, usamos por convenção de boas práticas


PATHs Caminhos e diretórios

. = diretório atual

.. = diretório anterior


/home/usuário é um caminho absolutos pois não depende de variável de ambiente.

Podemos ter o caminho relativo onde a sequencia do coando pode ser feita a partir do diretório corrente (Através da variável de ambiente)


PWD - Informa o diretórios corrente. 

cd - Navegar deretórios (Poucas variações) somente algumas sobre links

ls = dir = vdir (listam conteúdo de diretório)

Principais opções:

-F  informa no final de cada linha se é diretório ou executável comolanco um / ou * respectivamente

-R  Lista os arquivos recursivamente.

-a  inclui arquivos ocultos

-c  usa o status de tempo de alteração e não de criação (usado com o -t ou -l)

-d lista o nome do diretório ao invés dos arquivos

-i mostra o inode

-l longo

-q mostra caracteres especiais


-r inverte a ordem dos arquivos

-t pelo rótulo de tempo

-1 saida em 1 uma coluna simples

Você pode usar isso em script transformando uma listagem em somente uma coluna.


comando CP

cp arquivo1 arquivo1 (Não faz nada)
 -a preserva o máximo possivel de estrutura dos arquivos

 -d Copia as lilgações simbolocas que o arquivo pode ter

 -f remove os arquivos de destino se existentes e nunca pergunta antes

 -i interativo, pergunta antes de sobrescrever

 -p preserva os atrobutos do arquivo

-P (inclui diretórios dentro da criação)

-r Recursive

-R recusivo (tudo) Cópia segura

-V verbose

--------------------------------------------------------------------------
Comando MV
--------------------------------------------------------------------------


Nomralmente usado para renomear arquvos, mas também pode copiar e remover.

Para checar o sucesso de uma cópia de arquivo devemos verificar o inode, se mudou é por que o arquivo voi copiado e o outro movido.


ln cria links 

-s simbolico (inode diferente)


comando mkdir cria diretório

comando rmdir excli diretório
somente se estiver vazio


COMANDO rm [Remove arquivos e diretórios]

-f força e não pergunta

-i pede confirmação para exclusão

-r ou -R remove recusivamente

-d É uma opção perigosa

-v mostra antes de remover


Grep 
Busca padrões de informações dentro de arquivos [e-grep, fgrep e rgrep são variantes obsoletas compatível com grep -E grep -F grep -r]

-V versão do grep

-E informa que será usada uma expressão regular.

-F interpretar padrões como estring fixas e não como expressões regulares

-G - basic regex

-P perl regex

-e não entendi.

-f Perquisar por arquivo

-i ignorar case, tratar maiúsculas e minusculas como normal.

-v inverte o sentido da pesquisa trazendo os não padrões

-W 
-X pesquisar exatamente o que se tem na string


-c --count 



Comando FIND [Localiza arquivos no sistema] Por nome ou por outras características

Critérios: -name iname

- user (usuário X como dono do arquivo)
- group (por grupo)

- type (Por tipo de arquivo) C, b, l, d, s, f ...

- size (Por espaço usado no disco tamanho do arquivo)

- actime acessados a X tempo

- ctime status mu8dou

-mtime modificados a x tempo


Para usar mais de um critério de pesquisa você dever colocar espaço entre a pesquisa.


Ações dos comandos

-print [ Exibe na tela os arquivos encontrados] Esse é padrão do comando.

-exec cmd {} \; Execute comandos com o resultados da Pesquisa.

-ok cmd ... Questiona de moto interativo se pode executar o comandos.

- printf formato 

find . -type f -size +1000000c -atime +60 -exec {} \;

printf ( formata saída de várias formas) Formata datas também.


$ dirname [Retorna o nome do diretório] Esse comando é meio aleatório tem vezes que retorna o caminho absoluto e outras vezes o caminho 
relativo


Comandos que leem da entrada padrão (stdin=teclado) e escrevem na saída padrão (stdout=monitor) Na maioria da vezes esses comandos são
Utilizados para modificar a saída de outros comandos e por isso são usados juntamente com outros comandos, cobinando a sua lógica, com
a utilização de redirecionamentos e do próprio "|" (pipe)

-----------------------------------------------------------------------------------------------------------------------------------------

Esse comando são chamados também de filtros pois filtram informações formatando a saída de outros comandos.

$ cat 	[Exibe o conteúdo de arquivos]

$ wc 	[Faz a contagem de caracteres, paravras e linhas de arquivos]

$ sort 	[Ordena o conteúdo de arquivos]

$ read 	[Exibe as primeiras linhas dos arquivos]

$ tail	[Exibe as linhas finais dos arquivos]

Obs. Entenda-se arquivo com sendo tanto arquivo quando entrada principal (stdin)

Se sua saída não for direcionada, será sempre a saída da tela.
------------------------------------------------------------------------------------------------------------------------------------------

$ cat [- pções] [Nome do Arquivo]
	
	Se houver vários arquivos, serão apresentado um a um e apresentados na saída padrão stdout
	Pode ser usando para apresenar o que foi digitado na entrada parão (stdin) teclado.


	-v mostra os caracteres sem prepresentação na tela.

	-e mostra os feed de linha (Barra)

	-t Mostra as tabulações

	-n Numera as linhas

	Pode ser usado para limpar o conteúdo de um arquivo, 
	$ cat > arquivo [Será solicitada a digitação do que será inserido no arquivo, basta não digita nada e cancelar
	a operação com ctrl + d]

	Pode ser usado para ver caeacteres que não aparecem normalmente no prompt 

	$ cat -vet > arquivo

$ wc [lwc] [arquivo...]

	Se não tiver arquivo o wc lê a entrada padrão(stdin)

	Cuidado com a saída do echo, ele conta o \n no final do echo para que ele não conte esse caractere usade $ echo -n

	usar a opção -m para contar caracteres de acordo a unidade.

$ sort [+n.m] [-n.m] [-mnr] [-t set]  [arqui...]

	Se não tiver arquivo ele pega da entrada padrão stdin
	arq Ordena o arquivo por padrão por ondem numerica caso seja visto números, ápós por ondem alfabética.

	+n.m Considera para a ordenação a partir do campo, m1 posição m2 sendo a primeira posição "0 zero"

	-n.m Considera para ordenação até o campo n2, posição m2, sendo a primeira opção Zero

	-t sep

	-m Intercala dois arquivos já ordenados, escrevendo a intercalação na saída padrão (Join de 2 arquivos ordenados)

	-n Classificação numérica; Ordena por ordem numérica

	-r Inverte a ordem

	Obs. Se o separador não for especificado, o padrão será branco e tab porém para efeito de contagem, farão parte do campo.
	Assm como a posição 0 será o primeiro delimitador.

$ head [-numero] [-cn] [arquivo]

	Pode apresentar o arquivo ou a entrada padrão stdin

	-numero mostra a quantidade de linhas especificadas em número, se for omitido, apresenta 10 linhas

	-c --bytes=tamanho mostra os primeiros caracteres em byte, pode ser usado um multiplicados [b, k ,m] byte, kbyte e mbyte.

	-n número de linha idêtico a opção -numero.

$ tail [+|- numero] [-cnf] [arquivo]

	Mostra o final dos arquivos em linhas, se o arquivo for omitido, tail lê a entreda padrão.

	+numero Mostra o arquivo a partir da linha X esécificadda.

	-numero mostra as X ultimas linhas do arquivo

	-c --byte Mostra os ultimos arquivos em X byte, kbyte ou mbyte.

	-f Mostra na tela as linhas finais do arquivo na medida que ele cresce. 

	Ótimo para visualização de arquivos de log.


--------------------------------------------------------------------------------------------------------------------------------------
											SEGURANÇA NOS ACESSOS
--------------------------------------------------------------------------------------------------------------------------------------

PERMISSIONAMENTO DE ARQUIVOS

 $ chown [-f] [-R] dono arquivo

 	-f Não reporta erros caso ocorram

 	-R Executa recursivamente

 	Troca o dono do arquivo
 	Usando a sintaxe [$chown nomedodono:nomedoarquivo arquivo] Ele modifica tanto o dono quando o grupo do arquivo.

 $ chgrp [-f] [-R] grupo arquivo 

 	Troca o grupo do arquivo

 	Alteração de incluão de usuários em grupos, só pode ser feita por superusupário ou outros usuários que tenham permissão de 
 	modificar o arquivo de grupos.

 	Tem sintaxe parecida com o chown e somente o superusuário pode executar na maioria dos sistemas.


TIPOS DE ARQUIVOS

	r = read = leitura
	w = write = Escrita/gravação
	x = Exec = Execussão como Script ou Programa

	No entando vale lembrar que para alterar um arquivo a permissão de leitura também deve estar habilitada, pois para alterar ele precisa
	ler o arquivo.

	Para programas executáveis basta a permissão de execussão.

	ls -l para verificar as permissões de um arquivo, lista no formato longo

		drwxrwxr-x [d = tipo do arquivo(diretorio), rwx (Permissões para dono (u)) | rwx (Permissões para grupo) (g)| rwx (Permissões para outros (o))]
		
	Alterando as permissões de um arquivo

	$ chmod String de acesso(Configurações das permissões) arquivo ...
		chmod u+w /var/arquivo.txt
		Acrecenta a opção escrita nas configurações de permissão de dono do arquivo

		Os sinais + ou - adiciona ou remove as características

		Podemos também permissionar arquivos através de números, seguindo a notação abaixo:

		rwx w-x r--  (Letras)

		||| |0| |00  (Binários)

		 7	 5	4	 (Decimal)	

		 777 = rwxrwxrwx (não é bom usar essa configuração)


INFORMAÇÕES SOBRE OS USUÁRIOS

Comandos para administrar usuários

$ who [Informações de usuários que estão ativos]

	-am i Informações de login do próprio usuário
	-m o mesmo que a opção acima
	-H Mostra cabeçalho
	-a Mostra diversas informações sobre o sistema e seus usuários

$ id [Informa o id dos usuários ativos]

	-n mostra o nome do usuário e grupos ao invés do identificado numérico, 
	porém para tal deve ser usando com o -u -g -G	

$ finger [Exibe informações mais detalhadas sobre os usuários]

	Como comando finger conseguimos informações dos usuários, inclusive com o campo comentário no arquivo /etc/passwd

	Alterar informações dos usuários, $chnf [Altera nome do usuário, localização, telefone, informações adicionais]

$ groups [Informa quais grupos o usuário pertence]
	
	$ groups [apresenta a lista de grupos de usupários]

	$ groups fernanda [Apresenta a lista de grupos que fernanda daz parte]


------------------------------------------------------------------------------------------------------------------------------
									COMANDOS PARA TRABALHAR COM DATA, HORA E CALENDÁRIO
------------------------------------------------------------------------------------------------------------------------------

$ date [mostra e acerta a data do s

	$ date "+D"
	$ date date "+Hoje a data é: %d/%m/%y%n e a hora é: %T"

	-s usando quando desejamos acertar a data e hoje do sistema. Só pode ser usado pelo super usuário
		%n Quebra de linha
		%t Tabulação
		%m Mês
		%d Dia
		%y Ano com 2 dígitos
		%Y Ano com 4 dígitos
		%D Data no formato DD/DD/AA
		%H Hora
		%M Minuto
		%S Segundo
		%T Hora no formato HH:MM:SS
		%j Dia do ano
		%W Dia da Semana (Dom=0 a Sáb=6)
		%a Dia da semana abreviado
		%h Mês do ano

		Podemos pegar data anteriores usando esse comando.

$ cal [Mostra o calendário de um mês ou ano espedífico]

	Onde mês é o número de 1 a 12 e ano no formato de 4 algarísmos.

	$ cal 04 2000

	$ cal 1970

	
-----------------------------------------------------------------------------------------------------------------------------
								COMANDOS DE BACKUP
-----------------------------------------------------------------------------------------------------------------------------

Comandos de backup e compressão

tar - [Para agrupar vários arquivos em somente um]

compress - [Utilitários de compressão de arquivos]

Uncompress - [Descomprime arquivos compactados pelo compress]

zcat - [Permite visualizar o conteúdo de arquivos com compress]

gzip - [É o utilitário de compreensão de arquivos padrão do Linux]

gunzip - [Descomprime arquivos compactados pelo zip]


$ tar

	tar [-cfprtuvx] [arquivo_tar] [arquivo....]
	

		









































